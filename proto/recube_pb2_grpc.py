# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import recube_pb2 as recube__pb2


class LoginStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.LOGIN = channel.unary_unary(
                '/RECUBE.Login/LOGIN',
                request_serializer=recube__pb2.loginStatement.SerializeToString,
                response_deserializer=recube__pb2.loginRespons.FromString,
                )


class LoginServicer(object):
    """Missing associated documentation comment in .proto file."""

    def LOGIN(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LoginServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'LOGIN': grpc.unary_unary_rpc_method_handler(
                    servicer.LOGIN,
                    request_deserializer=recube__pb2.loginStatement.FromString,
                    response_serializer=recube__pb2.loginRespons.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'RECUBE.Login', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Login(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def LOGIN(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/RECUBE.Login/LOGIN',
            recube__pb2.loginStatement.SerializeToString,
            recube__pb2.loginRespons.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
